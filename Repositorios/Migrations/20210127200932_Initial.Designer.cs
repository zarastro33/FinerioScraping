// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repositorios;

namespace Repositorios.Migrations
{
    [DbContext(typeof(DbContextNapster))]
    [Migration("20210127200932_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Entidades.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ArtistaId");

                    b.Property<string>("NombreAlbum")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ArtistaId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Entidades.Artista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreArtista")
                        .HasMaxLength(200);

                    b.Property<int>("SubgeneroId");

                    b.HasKey("Id");

                    b.HasIndex("SubgeneroId");

                    b.ToTable("Artistas");
                });

            modelBuilder.Entity("Entidades.Cancion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ALbumId");

                    b.Property<string>("NombreCancion")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("ALbumId");

                    b.ToTable("Canciones");
                });

            modelBuilder.Entity("Entidades.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NombreGenero")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("Entidades.Subgenero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GeneroId");

                    b.Property<string>("NombreSubGenero")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("subgeneros");
                });

            modelBuilder.Entity("Entidades.Album", b =>
                {
                    b.HasOne("Entidades.Artista")
                        .WithMany("albums")
                        .HasForeignKey("ArtistaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entidades.Artista", b =>
                {
                    b.HasOne("Entidades.Subgenero")
                        .WithMany("Artistas")
                        .HasForeignKey("SubgeneroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entidades.Cancion", b =>
                {
                    b.HasOne("Entidades.Album")
                        .WithMany("canciones")
                        .HasForeignKey("ALbumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Entidades.Subgenero", b =>
                {
                    b.HasOne("Entidades.Genero")
                        .WithMany("subgeneros")
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
